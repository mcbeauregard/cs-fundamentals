Exercises

1. What is the main difference between a stack and a queue?
> Answer:
The main difference is how they arrange their data structures. Stack arranges data in a LIFO (last-in-first-out) priority. Whereas Queue, arranges data in a FIFO (first-in-first-out priority). Stack also uses a push and pop method, for it's data, which is not used in a Queue as it's a "commonplace data structure."

2. What are the similarities between stacks and queues?
> Answer:
 Both stacks and queues prioritize entries.

3. Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?
> Answer (revised):
- For the UNDO option I would use a Stack (LIFO) data structure because you want to UNDO the last (LI) action you took in a Word document and use it first (FO) in list of recent tasks. 
- For the REDO option I would use a Queue (FIFO) data structure because you want to REDO the task that was most recently used (FI) in a Word document and use it first (FO).

Programming Questions
You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

1. Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".
> Answer:

function reverse(string) {
    var stack = [];

    for (var i = 0; i < string.length; i++) { // push letter into stack
        stack.push(string[i]);
    }

    var reverseString = ''; // pop letter from the stack
    while (stack.length > 0) {
        reverseString += stack.pop();
    }
  return reverseString;
}
console.log(reverse('Bloc!')); // expected output: !colB


2. Implement the delete functionality of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure.

  To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue, except for the last one which should be deleted and returned.

  //`dequeue` to "take all of the elements in the queue one at a time" and
  //`enqueue` to "put them at the end of the queue, except for the last one which should be deleted and returned."

> Answer:

CLASS Stack
 FUNCTION pop(queue)
   SET temp to the first element
   SET FIRST element of list from list
   LOOP through the array and SET element to the end of the list
   DECREMENT end of element
   RETURN temp
 END FUNCTION
END CLASS


class Stack {
  constructor(){
    function(queue){

    var itemToReturn = items[0]     // Set item to be first element

    for (var i=0 ; i<tail-1; i++)  // if item is removed from tail, push item to stack
         items[i]= items[i+1]       // increment item by one
         tail --                    // decrement item from element by one
    return itemToReturn;            // return item
    }
  }


3. Fill in the methods for the following Queue class so that it will work as expected (FIFO).

> Answer:

CLASS QUEUE
 FUNCTION enqueue(element)
  APPEND element to the end of the list
 END FUNCTION

FUNCTION dequeue
  SET temp to the first element
  REMOVE FIRST element of list from list
  RETURN temp
 END FUNCTION
END CLASS
